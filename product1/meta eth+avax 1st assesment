// SPDX-License-Identifier: MIT
pragma solidity ^0.8.18;

contract ethAvax {
    address private owner;
    uint public balance;

constructor() public {
        owner = msg.sender;
        balance = 0;
    }
    function deposit (uint _amount) public {
        require(msg.sender == owner , "only the owner can deposit");
        assert(balance + _amount >= balance);
        balance += _amount;
    }
    function withdraw(uint _amount) public {
        require(msg.sender == owner, "only the owner can withraw");
        if (balance < _amount) {
            revert("insufficient balance");
        }
        balance -= _amount;

    }
    function getBalance() public view returns (uint) {
        return balance;
    }

}
